{"version":3,"sources":["../src/index.js"],"names":["reactElementToJsxString","element","filterProps","showDefaultProps","showFunctions","functionValue","tabStop","useBooleanShorthandSyntax","sortProps","maxInlineAttributesLineLength","displayName","Error","options"],"mappings":";;;;;;AAEA;;AACA;;;;AACA;;;;;;AAGA,IAAMA,0BAA0B,SAA1BA,uBAA0B,CAC9BC,OAD8B,EAa3B;AAAA,iFADU,EACV;AAAA,8BAVDC,WAUC;AAAA,MAVDA,WAUC,oCAVa,EAUb;AAAA,mCATDC,gBASC;AAAA,MATDA,gBASC,yCATkB,IASlB;AAAA,gCARDC,aAQC;AAAA,MARDA,aAQC,sCARe,KAQf;AAAA,MAPDC,aAOC,QAPDA,aAOC;AAAA,0BANDC,OAMC;AAAA,MANDA,OAMC,gCANS,CAMT;AAAA,mCALDC,yBAKC;AAAA,MALDA,yBAKC,yCAL2B,IAK3B;AAAA,4BAJDC,SAIC;AAAA,MAJDA,SAIC,kCAJW,IAIX;AAAA,MAHDC,6BAGC,QAHDA,6BAGC;AAAA,MAFDC,WAEC,QAFDA,WAEC;;AACH,MAAI,CAACT,OAAL,EAAc;AACZ,UAAM,IAAIU,KAAJ,CAAU,sDAAV,CAAN;AACD;;AAED,MAAMC,UAAU;AACdV,4BADc;AAEdC,sCAFc;AAGdC,gCAHc;AAIdC,gCAJc;AAKdC,oBALc;AAMdC,wDANc;AAOdC,wBAPc;AAQdC,gEARc;AASdC;AATc,GAAhB;;AAYA,SAAO,0BAAW,iCAAkBT,OAAlB,EAA2BW,OAA3B,CAAX,EAAgDA,OAAhD,CAAP;AACD,CA/BD;;kBAiCeZ,uB","file":"index.js","sourcesContent":["/* @flow */\n\nimport { Element } from 'react';\nimport formatTree from './formatter/formatTree';\nimport parseReactElement from './parser/parseReactElement';\nimport type { Options } from './options';\n\nconst reactElementToJsxString = (\n  element: Element<any>,\n  {\n    filterProps = [],\n    showDefaultProps = true,\n    showFunctions = false,\n    functionValue,\n    tabStop = 2,\n    useBooleanShorthandSyntax = true,\n    sortProps = true,\n    maxInlineAttributesLineLength,\n    displayName,\n  }: Options = {}\n) => {\n  if (!element) {\n    throw new Error('react-element-to-jsx-string: Expected a ReactElement');\n  }\n\n  const options = {\n    filterProps,\n    showDefaultProps,\n    showFunctions,\n    functionValue,\n    tabStop,\n    useBooleanShorthandSyntax,\n    sortProps,\n    maxInlineAttributesLineLength,\n    displayName,\n  };\n\n  return formatTree(parseReactElement(element, options), options);\n};\n\nexport default reactElementToJsxString;\n"]}